@model MakeableCMS.ViewModel.ApplicationViewModel

@{
    ViewBag.Title = "Create";
}
<div class="header-create" style="width: 100%; height: 165px; background-color: #d6ccff;">
    <div class="title" style="padding-top: 50px; padding-left: 20px;"><h2>Create Application </h2></div>
</div>
<br/>
<form method="post" enctype="multipart/form-data">
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Application</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row no-gutters">
            <div class="col-12 col-sm-6 col-md-8">


                <div class="form-group">
                    @Html.LabelFor(model => model.Application.Name, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-5">
                        @Html.EditorFor(model => model.Application.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Application.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Application.ImagePath, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text" id="inputGroupFileAddon01">Upload</span>
                            </div>
                            <div class="custom-file">
                                <input type="file" name="ImageFile" class="custom-file-input" id="inputGroupFile01"
                                       aria-describedby="inputGroupFileAddon01" required="">
                                <label class="custom-file-label" for="inputGroupFile01">Choose file</label>
                            </div>
                        </div>
                    </div>
                </div>
                <hr />
                <div class="form-group">
                    @Html.LabelFor(model => model.Application.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Application.Description, new { @class = "form-control", @rows = 5 })
                        @Html.ValidationMessageFor(model => model.Application.Description, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Application.AppOsId, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(m => m.Application.AppOsId, new SelectList(Model.AppOses, "Id", "Name"), "Select Phone OS..", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Application.AppOsId, "", new { @class = "text-danger" })
                    </div>
                </div>
                

                <div class="form-group">
                    @Html.LabelFor(model => model.Application.CategoryId, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(m => m.Application.CategoryId, new SelectList(Model.Category, "Id", "Name"), "Select Function..", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Application.CategoryId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Application.AppUrl, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Application.AppUrl, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Application.AppUrl, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-success" />
                    </div>
                </div>
            </div>
            <div class="col-6 col-md-4" style="background-color:#f5fffa">
                <br />
                <br />
                <br />
                <div class="form-group">
                    @Html.LabelFor(model => model.Application.AppStoreRating, htmlAttributes: new { @class = "control-label col-md-8" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Application.AppStoreRating, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Application.AppStoreRating, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Application.UserfulRate, htmlAttributes: new { @class = "control-label col-md-8" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Application.UserfulRate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Application.UserfulRate, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
        </div>
    </div>
</form>


<hr />
<div>
    @Html.ActionLink("Back to List", "Index", "", new { @class = "btn btn-secondary" })
</div>


@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")
}
